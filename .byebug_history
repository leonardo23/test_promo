c
(self.start_date_active_coupon.to_datetime.strftime("%d-%m-%Y").to_date..self.end_date_active_coupon.to_datetime.strftime("%d-%m-%Y").to_date).cover?(Time.now.strftime("%d-%m-%Y").to_date)
(Time.now..Time.now+4).cover?(
(Time.now..Time.now+4).cover?(Time.now)
self.start_date_active_coupon.to_datetime.strftime("%d-%m-%Y").to_date
(self.start_date_active_coupon.to_datetime.strftime("%d-%m-%Y").to_date >= Time.now.strftime("%d-%m-%Y").to_date)
c
Time.now.strftime("%d-%m-%Y").to_date
Time.now.strftime("%d-%m-%Y")
self.start_date_active_coupon.to_datetime.strftime("%d-%m-%Y").to_date
self.start_date_active_coupon.to_datetime.strftime("%d-%m-%Y").class
self.start_date_active_coupon.to_datetime.strftime("%d-%m-%Y")
c
check_validate_coupon.get_validate_coupon
c
check_validate_coupon.get_validate_coupon
exit
@check_validate_coupon.get_validate_coupon
check_validate_coupon.present?
exit
Coupon.where(:code_coupon => params_transaction[:code_coupon])
Coupon.where(:code_coupon => "001")
Coupon.last
params_transaction[:code_coupon]
params_transaction
@check_validate_coupon
c
 c
c
exit
promo_detail.promo
promo_detail
c
promo_detail
promo_detail.promo.promo_description
c
promo_target
c
((qty - promo_qty) * self.product.item_price.to_f) * self.value_discount
((qty - promo_qty) * self.product.item_price.to_f)
result
c
result
c
result
c
(qty.to_f * self.product.item_price.to_f) / 100 * 10
(qty.to_f * self.product.item_price.to_f) / 100
(qty.to_f * self.product.item_price.to_f)
self.value_discount
((qty.to_f * self.product.item_price.to_f) / 100) * self.value_discount
qty.to_i == self.value_promo
qty
c
qtyc
qty
qty == self.value_promo.to_s
qty == self.value_promo
qty.to_i == self.value_promo
self.value_discount > 0
result
c
qty.to_i == self.value_promo
qty == self.value_promo
c
self.value_promo
self.promo
qty
qty == self.value_promo
result
c
@promo
c
(qty.to_f * self.product.item_price.to_f)
qty == self.value_promo
c
qty == self.value_promo
self.value_discount > 0
self.promo_target
self
c
@promo
c
params
pp params
exit
params_promo[:promo_details]
params_promo
params[:promo_details]
params
params[:promo][:promo_details]
params[:promo]
params
params_promo[:promo_details]
params_promo
@promo.promo_details
@promo
c
@promo.valid?
exit
@promo.errors.messages
@promo.valid?
exit
params
pp params
c
product
exit
self.start_date_promo.to_date.is_a? Date
self.start_date_promo.to_date
self.start_date_promo.is_a? (TimeWithZone)
self.start_date_promo.class
self.start_date_promo
self.start_date_promo.is_a? (Date)
self.start_date_promo.is_a? (DateTime)
self.start_date_promo.is_a? (Datetime)
self.start_date_promo.is_a? Datetime
self.start_date_promo.is_a? Date
self.start_date_promo
c
@category.valid?
@category
exit
@category
exit
@categorye
exit
Category.new(params_category.merge!({:created_by => current_user.id}))
Category.new(params_category.merge!({:created_by => current_user}))
Category.new(params_category)
Category.new(params_category).set_created_by(1)
Category.new(params_category).set_created_by
Category.new(params_category).set_created_by(current_user)
Category.new(params_category)
@category
c
self.valid?
self
exit
@category
c
self.created_by_user = user
user
self.created_by_user
self
exit
Category.first
@category
exit
@product.created_by_user = current_user
@product.created_by_user.class
@product.created_by_user
current_user
@current_user
c
ff.object.id
ff.object
ff.category
ff.id
ff
c
@product.valid?
@product
c
params[:product][:category_attributes]
params[:product]
params
pp params
exit
params_product[:category_id]
params_product
params
c
params_product
exit
params
exit
@product
params
jjh
